//def RELEASE_REPOSITORY_URL = "http://localhost:8081/nexus/content/repositories/releases/"
//def SNAPSHOT_REPOSITORY_URL = "http://localhost:8081/nexus/content/repositories/snapshots/"
//def NEXUS_USERNAME = "admin"
//def NEXUS_PASSWORD = "admin123"

apply plugin: 'maven-publish'

def RELEASE_REPOSITORY_URL = "https://packages.aliyun.com/maven/repository/2354637-release-xwYh3l/"
def SNAPSHOT_REPOSITORY_URL = "https://packages.aliyun.com/maven/repository/2354637-snapshot-lccqTz/"
//这个是快照的账密
//def NEXUS_USERNAME = "6535ec776052a37844c818cd"
//def NEXUS_PASSWORD = "82jcDkLXfFVB"
//这个是正式的账密
def NEXUS_USERNAME = "643656aae37ceb0d147ecc52"
def NEXUS_PASSWORD = "NEU85uR1RKZy"

afterEvaluate {
    publishing {
        repositories {
            maven {
                allowInsecureProtocol(true)
                name("AndroidReleaseMaven")
                url = RELEASE_REPOSITORY_URL
                credentials {
                    username = NEXUS_USERNAME
                    password = NEXUS_PASSWORD
                }
            }
            maven {
                allowInsecureProtocol(true)
                name("AndroidSnapshotMaven")
                url = SNAPSHOT_REPOSITORY_URL
                credentials {
                    username = NEXUS_USERNAME
                    password = NEXUS_PASSWORD
                }
            }
        }
        publications {
            Production(MavenPublication) {
                from components.release
                artifact androidSourcesJar //打包源码，去除这行打的包将看不到源码
                groupId = GROUP
                artifactId = POM_ARTIFACT_ID
                version = VERSION_NAME
            }
            Develop(MavenPublication) {
                from components.debug
                artifact androidSourcesJar //打包源码，去除这行打的包将看不到源码
                groupId = GROUP
                artifactId = POM_ARTIFACT_ID
                version = "${VERSION_NAME}-SNAPSHOT"
            }
        }
    }
    artifacts {
        archives androidSourcesJar
        archives androidJavadocsJar
    }
}
// 用于打包源代码的任务
task androidSourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.srcDirs
}
task androidJavadocs(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}
task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
    archiveClassifier.set('javadoc')
    from androidJavadocs.destinationDir
}
//解决 JavaDoc 中文注释生成失败的问题
tasks.withType(Javadoc) {
    options.addStringOption('Xdoclint:none', '-quiet')
    options.addStringOption('encoding', 'UTF-8')
    options.addStringOption('charSet', 'UTF-8')
}